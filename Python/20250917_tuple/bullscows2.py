# БЫКИ И КОРОВЫ
# Необходимо загадать число из 4 различных цифр
# Необходимо сообщить пользователю краткие правила игры
# И предоставить возможность сделать первый ход
# Проверить ответ, выдав диагностику: сколько цифр расположено на своих местах, а сколько - на чужих
# Если число не угадано, предоставить возможность сделать новое предположение


# Необходимо загадать число из 4 различных цифр
# 2356
import random
#random.choice('')
# САМОСТОЯТЕЛЬНО ПОСМОТРЕТЬ ДРУГИЕ ФУНКЦИИ!!
#array = [
#    random.randint(0, 9)),
#    random.randint(0, 9)),
#    random.randint(0, 9)),
#    random.randint(0, 9))
#]
#0, 1, 2, 3, 4, 5, 6, 7, 8, 9

'''
У нас есть кубики - список из 10 чисел от 0 до 9                  kubiki = [i for i in range(0, 10)]
Создаем пустой список для загадки                                 zagadka = []

ПОВТОРИТЬ 4 РАЗА
Берем случайный кубик, т.е. выбираем число от 0 до длины списка   pos = random.randint(0, len(kubiki)-1)
Это будет номер позиции в нашем списке
Смотрим, какой кубик там лежит                                    cifra = kubiki[pos]
Удаляем кубик из набора                                           del kubiki[pos]
Кладем цифру в загадку                                            zagadka.append(cifra)
'''
#                                           0      0==0
#                                         #         1    2    3    4    5    6    7    8    9
#kubiki = [str(i) for i in range(0, 10)]  #   '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'   => '3'
#                                           1 0==1
#                                         #    0    1    2    3    4    5    6    7    8
#kubiki = [str(i) for i in range(0, 10)]  #   '0', '1', '2', '4', '5', '6', '7', '8', '9'        => '0'
#                                           2 0==2
#                                         #    0    1    2    3    4    5    6    7
#kubiki = [str(i) for i in range(0, 10)]  #   '1', '2', '4', '5', '6', '7', '8', '9'             => '1'
#                                           3 0==3
#                                         #    0    1    2    3    4    5    6
#kubiki = [str(i) for i in range(0, 10)]  #   '2', '4', '5', '6', '7', '8', '9'


kubiki = [str(i) for i in range(0, 10)]   #   '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'
zagadka = []
for i in range(4):       # 1True 0False
    # == - сравнение на равенство
    pos = random.randint(     #  Выбрать случайное число от 0 или от 1 до конца массива
            i == 0,           #  Если первая цифра, она не должна быть нулем, а дальше - можно с нуля (ложь)
            len(kubiki) - 1)  #  randint выбирает включая обе границы 
    kubik = kubiki[pos]       #  Взяли кубик на той случайной позиции, которую предложил рандом
    del kubiki[pos]           #  Чтобы не выбрать его повторно
    zagadka.append(kubik)
print(zagadka)

# Необходимо сообщить пользователю краткие правила игры
print('''ПРИВЕТ! Я загадал 4-х значное число, цифры не повторяются,
ты можешь называть только число целиком. Я посмотрю на него и проверю,
есть ли среди твоих цифр - мои. Если цифра есть и стоит на своем месте,
она называется Бык, если на чужом - корова. Я посчитаю и сообщу тебе
общее количество быков и коров, не указывая конкретные позиции.
''')

def word_form(kolichestvo, words):
    '''Функция получает на вход 2 параметра
    1 параметр - количество
    2 параметр - словарь, содержащий 1, "мало" (2,3,4) и много (5+, 11-19 и т.д.)
    {'one': 'год', 'few': 'года', 'many': 'лет'}
    '''
    if (kolichestvo % 100 < 10) or (kolichestvo % 100 > 20):
        if (kolichestvo % 10 == 2) or (kolichestvo % 10 == 3) or (kolichestvo % 10 == 4):
            return words['few']  # Когда предметов 2, 3 или 4
        if (kolichestvo % 10 == 1):
            return words['one']  # Когда предмет 1
    return words['many']  # Когда предметов много и более 4


popitka = []  #  пустой бланк для ответа
# ПОКА число не угадано, т.е. пока загаданный массив не равен попытке
while popitka != zagadka:
    # И предоставить возможность сделать новый ход - ответ пользователя
    popitka = list(input('Введи свое 4хзначное число: '))   # '5432' -> ['5', '4', '3', '2']
    # Проверить ответ, выдав диагностику: сколько цифр расположено на своих местах, а сколько - на чужих
    ['5', '7', '2', '9']  # popitka
    ['5', '4', '3', '2']  # zagadka
    # Ведущий проверяет каждую цифру. Если на своем месте - бык,
    # на чужом - корова. Потом подсчитывает животных и выдает результат.
    bulls = 0
    cows = 0
    if len(popitka) == 4:  # диа
        for pos in range(4):
            if zagadka[pos] == popitka[pos]:
                bulls += 1
            elif zagadka[pos] in popitka:
                cows += 1
        print(
            bulls, word_form(kolichestvo, words),
            cows, 'коров')


print('Ура, ты выиграл!')


# 
#
#
#
